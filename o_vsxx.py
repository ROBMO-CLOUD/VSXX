import base64
exec(base64.b64decode('ZnJvbSB0ZWxldGhvbiBpbXBvcnQgVGVsZWdyYW1DbGllbnQsIGV2ZW50cwppbXBvcnQgdGVsZWJvdAppbXBvcnQgcmUKaW1wb3J0IGRhdGV0aW1lCmltcG9ydCBhc3luY2lvCmltcG9ydCByYW5kb20KZnJvbSB0aW1lIGltcG9ydCBzbGVlcApmcm9tIG9zIGltcG9ydCBzeXN0ZW0sIG5hbWUsIGV4ZWN2CmZyb20gc3lzIGltcG9ydCBleGVjdXRhYmxlLCBhcmd2CmZyb20gYmluIGltcG9ydCBnZXRfYmluX2luZm8KZnJvbSBhcGlzIGltcG9ydCBhcGlkLCBhcGloYXNkLCB0b2tlbgoKbm93ID0gZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkKbWVzX2FjdHVhbCA9IG5vdy5tb250aAphbm9fYWN0dWFsID0gbm93LnllYXIKCmNsaWVudCA9IFRlbGVncmFtQ2xpZW50KCdzY3JhcGZyZWUnLCBhcGlkLCBhcGloYXNkKQpjbGllbnQucGFyc2VfbW9kZSA9ICdodG1sJwpib3QgPSB0ZWxlYm90LlRlbGVCb3QodG9rZW4sIHBhcnNlX21vZGU9Imh0bWwiKQppZF9jaGFubmVsID0gLTEwMDI0NTAyNDc5MTMKaWRfYWxlcnRfY2hhbm5lbCA9IC0xMDAyNDMyMTc5MDA3CgprZXl3b3JkcyA9IFsnQ2FyZCBJc3N1ZXIgRGVjbGluZWQgQ1ZWJywgJ0FwcHJvdmVkISDinIUnLCAnQ2FyZCBJc3N1ZXIgRGVjbGluZWQgQ1ZWJywgJzEwMDA6IEFwcHJvdmVkJywgJ0NWQyBEZWNsaW5lZCAnLCAnQ1ZWMiBERUNMSU5FRCcsICfwnZKU8J2SlvCdkoTwnZKE8J2ShvCdkobwnZKF8J2ShvCdkoUnLCAn8J2RufCdkobwnZKU8J2SkfCdkpDwnZKP8J2SlPCdkoYgLcK7IPCdkajwnZKR8J2SkfCdkpPwnZKQ8J2Sl/CdkobwnZKFJywgJyBDVlZfTk9UX1BST0NFU1NFRCcsICdSZXF1ZXN0IHdhcyBwcm9jZXNzZWQgc3VjY2Vzc2Z1bGx5LicsICdJbnZhbGlkIENhcmQgVmVyaWZpY2F0aW9uIE51bWJlciAoQ1ZOKScsICdzdWNjZWVkZWQnLCAnREVDTElORUQgQ1ZWMicsICdHYXRld2F5IFJlamVjdGVkOiBjdnYnLCAiWW91ciBjYXJkJ3Mgc2VjdXJpdHkgY29kZSBpcyBpbmNvcnJlY3QiLCAnMTAwMCBBcHByb3ZlZCcsICdJbnN1ZmZpY2llbnQgRnVuZHMnLCAnWW91ciBjYXJkIGhhcyBpbnN1ZmZpY2llbnQgZnVuZHMnLCAnR2F0ZXdheSBSZWplY3RlZDogYXZzX2FuZF9jdnYnLCAnVmVyaWZpZWQnLCAnQ1ZWX01BVENIRUQnXQoKa2V5d29yZHNfZGVjID0gTm9uZQoKY2FyZHNfcHJvY2VzcyA9IHt9CgpkZWYgdmVmX2NjbihjY24pOgogICAgd2l0aCBvcGVuKCdjY3MudHh0JywgJ3InKSBhcyBmOgogICAgICAgIHIgPSBmLnJlYWQoKQogICAgcmV0dXJuIGNjbiBpbiByCgphc3luYyBkZWYgaGFuZGxlX2xvZ2luX2lzc3VlKCk6CiAgICBtZXNzYWdlID0gIkVsIGJvdCBuZWNlc2l0YSBpbmljaWFyIHNlc2nDs24gbnVldmFtZW50ZS4gVmVyaWZpY2Egc2kgZXMgbmVjZXNhcmlvLiIKICAgIHRyeToKICAgICAgICBhd2FpdCBib3Quc2VuZF9tZXNzYWdlKGlkX2FsZXJ0X2NoYW5uZWwsIG1lc3NhZ2UpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJFcnJvcjoge2V9IikKCkBjbGllbnQub24oZXZlbnRzLk5ld01lc3NhZ2UpCmFzeW5jIGRlZiBlZGl0ZWRfZXZlbnQoZXZlbnQ6IGV2ZW50cyk6CiAgICBnbG9iYWwga2V5d29yZHNfZGVjCiAgICB0cnk6CiAgICAgICAgZWRpdGVkX3RleHQgPSBldmVudC5yYXdfdGV4dAogICAgZXhjZXB0IE1lbW9yeUVycm9yOgogICAgICAgIHJldHVybiAuLi4KCiAgICBjYXJkX3BhdHRlcm4gPSByZS5jb21waWxlKHInXGIoXGR7MTZ9KVx8KFxkezJ9KVx8KFxkezR9KVx8KFxkezN9KVxiJykKICAgIHggPSBjYXJkX3BhdHRlcm4uZmluZGFsbChlZGl0ZWRfdGV4dCkKCiAgICB0cnk6CiAgICAgICAgY2MgPSB4WzBdWzBdCiAgICAgICAgbWVzID0geFswXVsxXQogICAgICAgIGFubyA9IHhbMF1bMl0KICAgICAgICBjdnYgPSB4WzBdWzNdCgogICAgICAgIGlmIGNhcmRzX3Byb2Nlc3MuZ2V0KGNjLCAwKSA+PSAzOgogICAgICAgICAgICByZXR1cm4KCiAgICAgICAgaWYgbm90IHZlZl9jY24oY2MpOgogICAgICAgICAgICBmb3IgXyBpbiByYW5nZSg0KToKICAgICAgICAgICAgICAgICAgICByYW5kb21fZGlnaXRzID0gIiIuam9pbihyYW5kb20uY2hvaWNlKCIwMTIzNDU2Nzg5IikgZm9yIF8gaW4gcmFuZ2UoNikpCiAgICAgICAgICAgICAgICAgICAgcmFuZG9tX21vbnRoID0gcmFuZG9tLnJhbmRpbnQoMSwgMTIpCiAgICAgICAgICAgICAgICAgICAgcmFuZG9tX3llYXIgPSByYW5kb20ucmFuZGludCgyMDI1LCAyMDMwKQoKICAgICAgICAgICAgeCA9IGdldF9iaW5faW5mbyhjY1s6Nl0pCgogICAgICAgICAgICB0ZXh0ID0gZiIiIjxiPjxhIGhyZWY9Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9ST0JNTy1DTE9VRC9Db2RlL21haW4vc2NycC5qcGciPiYjODIwMzs8L2E+Cls8YSBocmVmPSJodHRwczovL3QubWUvK0NxTkFyZVVLQ190aVl6RmgiPuS5iDwvYT5dIPCdkJXwnZCS8J2Ql/CdkJcg8J2QkvCdkILwnZCR8J2QgPCdkI/wnZCP8J2QhPCdkJEgLSDjgJAg8J2QhfCdkJHwnZCE8J2QhCDjgJEgCuKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgQpbPGEgaHJlZj0iaHR0cHM6Ly90Lm1lLytDcU5BcmVVS0NfdGlZekZoIj7kuYg8L2E+XSBCSU4g4p6rICM8Y29kZT57Y2NbOjZdfTwvY29kZT4K4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSB4pSBCls8YSBocmVmPSJodHRwczovL3QubWUvK0NxTkFyZVVLQ190aVl6RmgiPuS5iDwvYT5dIENDIOKeqyA8Y29kZT57Y2N9fHttZXN9fHthbm99fHtjdnZ9PC9jb2RlPgrilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIEKWzxhIGhyZWY9Imh0dHBzOi8vdC5tZS8rQ3FOQXJlVUtDX3RpWXpGaCI+5LmIPC9hPl0gQ291bnRyeSDinqsgPGNvZGU+e3guZ2V0KCJjb3VudHJ5Iil9PC9jb2RlPiB8IDxjb2RlPnt4LmdldCgiZmxhZyIpfTwvY29kZT4KWzxhIGhyZWY9Imh0dHBzOi8vdC5tZS8rQ3FOQXJlVUtDX3RpWXpGaCI+5LmIPC9hPl0gVHlwZSDinqsgPGNvZGU+e3guZ2V0KCJ0eXBlIil9PC9jb2RlPiB8IDxjb2RlPnt4LmdldCgidmVuZG9yIil9PC9jb2RlPgpbPGEgaHJlZj0iaHR0cHM6Ly90Lm1lLytDcU5BcmVVS0NfdGlZekZoIj7kuYg8L2E+XSBMZXZlbCDinqsgPGNvZGU+e3guZ2V0KCJsZXZlbCIpfTwvY29kZT4KWzxhIGhyZWY9Imh0dHBzOi8vdC5tZS8rQ3FOQXJlVUtDX3RpWXpGaCI+5LmIPC9hPl0gQmFuayDinqsgPGNvZGU+e3guZ2V0KCJiYW5rX25hbWUiKX08L2NvZGU+IArilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIEKWzxhIGhyZWY9Imh0dHBzOi8vdC5tZS8rQ3FOQXJlVUtDX3RpWXpGaCI+5LmIPC9hPl0gRXh0cmEg4p6rIDxjb2RlPntjY1s6Nl19e3JhbmRvbV9kaWdpdHN9eHh4eHx7cmFuZG9tX21vbnRoOjAyZH18e3JhbmRvbV95ZWFyfXxybmQ8L2NvZGU+Cls8YSBocmVmPSJodHRwczovL3QubWUvK0NxTkFyZVVLQ190aVl6RmgiPuS5iDwvYT5dIFBvd2VyZWQgYnkg4p6rIDxhIGhyZWY9Imh0dHBzOi8vdC5tZS9DTDBVRF9BRE1JTiI+QENMMFVEX0FETUlOIPCfpYA8L2E+CuKAjiDigI4gCiAgICA8L2I+IiIiCgogICAgICAgICAgICBzbGVlcCgzMS41KQogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBib3Quc2VuZF9tZXNzYWdlKAogICAgICAgICAgICAgICAgICAgIGlkX2NoYW5uZWwsIAogICAgICAgICAgICAgICAgICAgIHRleHQsIAogICAgICAgICAgICAgICAgICAgIHBhcnNlX21vZGU9IkhUTUwiLAogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgYm90LnNlbmRfbWVzc2FnZShpZF9jaGFubmVsLCB0ZXh0LCBkaXNhYmxlX3dlYl9wYWdlX3ByZXZpZXc9VHJ1ZSkKCiAgICAgICAgICAgIGNhcmRzX3Byb2Nlc3NbY2NdID0gY2FyZHNfcHJvY2Vzcy5nZXQoY2MsIDApICsgMQoKICAgICAgICAgICAgd2l0aCBvcGVuKCdjY3MudHh0JywgJ2EnKSBhcyBmOgogICAgICAgICAgICAgICAgZi53cml0ZShjYyArICdcbicpCgogICAgZXhjZXB0OgogICAgICAgIHBhc3MKCnN5c3RlbSgnY2xzJyBpZiBuYW1lID09ICdudCcgZWxzZSAnY2xlYXInKQpwcmludCgnQENMMFVEX0FETUlOJykKCnRyeToKICAgIGNsaWVudC5zdGFydCgpCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgIHByaW50KGYiRXJyb3I6IHtlfSIpCiAgICBhc3luY2lvLnJ1bihoYW5kbGVfbG9naW5faXNzdWUoKSkgIAoKY2xpZW50LnJ1bl91bnRpbF9kaXNjb25uZWN0ZWQoKQo=').decode('utf-8'))